#                            -*- mode: org; -*-
#+TITLE: Leda: Multiparadigm Programming
#+AUTHOR: nil
#+OPTIONS: author:nil email:nil ^:{}
#+LaTeX_HEADER: \usepackage[parfill]{parskip}
#+STARTUP: hidestars odd

* [[http://henry.github.com/Leda/COPYING][Copyright]]
  + Copyright (C) 1993-2015 Timothy A. Budd

* Overview of Leda
  The Leda programming is a multi-paradigm language which spans the boundaries
  of the well known programming language models: imperative, object-oriented,
  functional and logic.

  Leda was developed in the early 1990's by Timothy A. Budd an associate
  professor at Oregon State University Corvallis.  The attempt to define a
  language that would support multiple programming paradigms was inspired by
  Budd's excitement about OOP and other innovations occuring in the development
  of programming languages at the time. The initial attempts at creating the new
  language started with the development of compilers by students under Budd's
  direction as well as other researchers at the University of Nice, in
  France.  In 1993 Budd took a sabbatical leave from his University post at
  Oregon State to teach in Europe and complete research on the new programming
  language.  During this year, he penned the definitive text on the Leda:
  [[http://web.engr.oregonstate.edu/~budd/Books/leda/index.html]["Multiparadigm
  Programming in Leda"]].

  The Leda syntax is influenced by the ALGOL-60 programming language and similar
  to many of the other languages that are direct decedents of ALGOL-60 including
  Pascal, SIMULA, Modula, Oberon and Ada.

* Original Sources
  + [[http://web.engr.oregonstate.edu/~budd/Books/leda/info/ledainterp.tar][Leda
    Interpreter]]

* Documentation
  + [[http://henry.github.com/Leda/Doc/refmanual.pdf][Reference Manual]]
  + [[https://en.wikipedia.org/wiki/Leda_(programming_language)][Leda_(programming_language)]]
  + [[http://web.engr.oregonstate.edu/~budd/Books/leda/index.html][Multiparadigm
    Programming in Leda (out of print)]]
  + [[http://hdl.handle.net/1957/28709][A revised Leda language definition]]
  + [[http://courses.cs.vt.edu/~cs5314/Lang-Paper-Presentation/Papers/HoldPapers/LEDA.pdf][Study of Leda Programming Language]]
  + [[http://hdl.handle.net/1957/28613][Multiparadigm data structures in Leda]]
  + [[http://hdl.handle.net/1957/28610][LEDA : a blending of imperative and relational programming]]
  + [[http://hdl.handle.net/1957/28710][CLEDA - LEDA with constraint logic programming]]
  + [[http://web.engr.oregonstate.edu/~budd/Books/leda/info/pldi95.ps][Multiparadigm Programming in Leda (slides)]]
* Build and Test
  The default build setup is to compile with =gcc= but =lc= has also been
  tested with =clang= and any other standard C compiler should be suitable.
  The particular compiler can be configured by editing =Src/Makefile=.
  + To build the Leda interpreter and manual: =make=
  + To run all the tests: =make test=
