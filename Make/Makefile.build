### -*- mode: makefile -*-
###-----------------------------------------------------------------------------
### Title: Common build rules
###  Maintainer: Henry G. Weller
###-----------------------------------------------------------------------------

###-----------------------------------------------------------------------------
### Default target
###-----------------------------------------------------------------------------

.PHONY: all begin build depend end

all: begin build end

begin:
	@echo ---------- Building $(TARGET) in $$(pwd) -----------

build:									\
        depend                                                          \
	prebuild							\
	$(OBJDIR) $(OBJECTS) $(OBJLIBRARY) $(OBJDRIVER) $(OBJEXE)	\
	postbuild

depend: $(OBJDIR)/Makefile.depend
	@echo Dependencies for $(TARGET) done

end:
	@echo ---------- Completed $(TARGET) in $$(pwd) ----------


# "Hooks" for pre and post build steps
.PHONY: prebuild postbuild
prebuild:
postbuild:

###-----------------------------------------------------------------------------
### General rules
###-----------------------------------------------------------------------------
include $(P_DIR)/Make/Makefile.rules

###-----------------------------------------------------------------------------
### Product generation rules
###-----------------------------------------------------------------------------
$(OBJDIR):
	$B mkdir -p $(OBJDIR)

$(OBJEXE): $(OBJECTS) $(OBJLIBDEP)
	$B $(LD) $(OBJECTS) $(LDFLAGS) $(LDFLAGS_$(OBJEXE))		\
		 -L$(OBJROOT) $(OBJLIBRARIES) -o $(OBJEXE)

$(OBJLIBRARY) lib: $(OBJECTS)
	$B $(AR) -r $@ $(OBJECTS); $(RANLIB) $@

$(OBJDRIVER) dvr: $(OBJECTS) $(OBJLIBDEP)
	$B $(DRIVER_LD) $@ $(LDFLAGS) $(LDFLAGS_$*)		\
		 $(OBJECTS) -L$(OBJROOT) $(OBJLIBRARIES)

###-----------------------------------------------------------------------------
### Inference rules
###-----------------------------------------------------------------------------
$(OBJDIR)/%.c.o: %.c
	$C $(CC) $(CFLAGS) $(CPPFLAGS_$*) $(CFLAGS_$*) -o $@ -c $<

$(OBJDIR)/%.C.o: %.C
	$C $(CXX) $(CXXFLAGS) $(CPPFLAGS_$*) $(CXXFLAGS_$*) -o $@ -c $<

$(OBJDIR)/%.cpp.o: %.cpp
	$C $(CXX) $(CXXFLAGS) $(CPPFLAGS_$*) $(CXXFLAGS_$*) -o $@ -c $<

$(OBJDIR)/%.l.c: %.l
	$M mkdir -p $(OBJDIR)
	$C flex -o $@ $<

$(OBJDIR)/%.y.c $(OBJDIR)/%.y.h: %.y
	$M mkdir -p $(OBJDIR)
	$C bison -d -o $(OBJDIR)/$*.y.c $<

###-----------------------------------------------------------------------------
### Dependencies generation
###-----------------------------------------------------------------------------
CAT_DEPEND=sed								\
	-e 's@$(@:.mkdepend=).o:@$(OBJDIR)/$(@:.mkdepend=).o:@g' 	\
	-e 's@$*.o:@$(OBJDIR)/$(@:.mkdepend=).o:@g'	 		\
	< _tmp.depend >> $(OBJDIR)/_Makefile.depend &&			\
	rm -f _tmp.depend


ifdef TARGET
$(OBJDIR)/Makefile.depend: $(SOURCES)
	$M echo Generating dependencies in $@
	$M mkdir -p $(OBJDIR)
	$M echo > $(OBJDIR)/Makefile.depend
	$M $(MAKE) M=$M mkdepend
else
$(OBJDIR)/Makefile.depend:
endif

.PHONY: mkdepend predepend
mkdepend: predepend $(SOURCES:%=%.mkdepend)
	$M touch $(OBJDIR)/_Makefile.depend
	$M mv $(OBJDIR)/_Makefile.depend $(OBJDIR)/Makefile.depend
predepend:
	$M echo > $(OBJDIR)/_Makefile.depend
%.c.mkdepend:
	$M $(CC_DEPEND) $*.c && $(CAT_DEPEND)
%.C.mkdepend:
	$M $(CXX_DEPEND) $*.C && $(CAT_DEPEND)
%.cpp.mkdepend:
	$M $(CXX_DEPEND) $*.cpp && $(CAT_DEPEND)
%.S.mkdepend:
	$M $(AS_DEPEND) $*.S && $(CAT_DEPEND)
%.s.mkdepend:
	$M $(AS_DEPEND) $*.s && $(CAT_DEPEND)
%.l.mkdepend:
	$M cp $*.l $*.c
	$M $(CC_DEPEND) $*.c \
	    && sed -i -e 's@$*.c@$(OBJDIR)/$*.l.c@' \
		-e 's@\([^ /]*\.y\.h\)@$(OBJDIR)/\1@' _tmp.depend \
	    && $(CAT_DEPEND)
	$M rm -f $*.c

%.y.mkdepend:
	$M cp $*.y $*.c
	$M $(CC_DEPEND) $*.c \
	    && sed -i 's@$*.c@$(OBJDIR)/$*.y.c@' _tmp.depend \
	    && $(CAT_DEPEND)
	$M rm -f $*.c

###---------------------------------------------------------------------
### Org-mode documentation building
###---------------------------------------------------------------------
.SUFFIXES: .org .html
.org.html:
	$B eemacs $< -q -l ~/.emacs.d/init-eemacs.el --batch \
            --eval "(org-html-export-to-html)"

###-----------------------------------------------------------------------------
### Include dependencies from current directory
###-----------------------------------------------------------------------------
# Build and include the dependencies only if SOURCES is defined,
# no target options are specified (e.g. all-v)
# a 'clean' target is not specified

ifdef SOURCES
ifeq ($(findstring -,$(MAKECMDGOALS)),)
ifeq ($(findstring clean,$(MAKECMDGOALS)),)
-include $(OBJDIR)/Makefile.depend
endif
endif
endif

###-----------------------------------------------------------------------------
